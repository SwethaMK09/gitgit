import android.app.usage.UsageStats
import android.app.usage.UsageStatsManager
import android.content.Context
import android.os.Build
import android.os.Bundle
import androidx.annotation.RequiresApi
import androidx.appcompat.app.AppCompatActivity
import kotlinx.android.synthetic.main.activity_main.*

class UsageStatsActivity : AppCompatActivity() {

    @RequiresApi(Build.VERSION_CODES.LOLLIPOP)
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        // Replace "com.example.yourapp" with the package name of the app you want to monitor
        val appPackageName = "com.example.yourapp"

        val usageStatsManager =
            getSystemService(Context.USAGE_STATS_SERVICE) as UsageStatsManager

        val endTime = System.currentTimeMillis()
        val beginTime = endTime - 1000 * 60 * 60 // For the last 1 hour

        val usageStatsList =
            usageStatsManager.queryUsageStats(
                UsageStatsManager.INTERVAL_DAILY,
                beginTime,
                endTime
            )

        // Filter the results based on the package name
        val filteredUsageStatsList = usageStatsList.filter { it.packageName == appPackageName }

        // Display usage stats
        displayUsageStats(filteredUsageStatsList)
    }

    private fun displayUsageStats(usageStatsList: List<UsageStats>) {
        // Process and display usage stats as needed
        if (usageStatsList.isNotEmpty()) {
            val totalForegroundTime = usageStatsList.sumBy { it.totalTimeInForeground.toInt() }

            // Display or process the information accordingly
            // (e.g., update UI, log, send to another app)
            textViewUsageStats.text = "Total Usage Time: $totalForegroundTime milliseconds"
        } else {
            textViewUsageStats.text = "No usage stats available for the specified app."
        }
    }
}
