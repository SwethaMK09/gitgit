// MainActivity.kt
package com.example.mediaplayer1

import android.content.Intent
import android.media.MediaPlayer
import android.os.Bundle
import android.widget.Button
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent

class MainActivity : ComponentActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        setContentView(R.layout.activity_main)

        val getStartedButton: Button = findViewById(R.id.getStartedButton)

        getStartedButton.setOnClickListener {
            // Navigate to the playlist activity
            val intent = Intent(this, PlaylistActivity::class.java)
            intent.putExtra("selectedMusic", 1) // Default to music1, you can change this for different music
            startActivity(intent)
        }
    }
}


// PlaylistActivity.kt
package com.example.mediaplayer1

import android.media.MediaPlayer
import android.os.Bundle
import android.widget.Button
import androidx.appcompat.app.AppCompatActivity

class PlaylistActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_playlist)

        val selectedMusic = intent.getIntExtra("selectedMusic", 1)
        val mediaPlayer: MediaPlayer = MediaPlayer.create(applicationContext, getResourceIdForMusic(selectedMusic))

        val playButton: Button = findViewById(R.id.playButton)
        val pauseButton: Button = findViewById(R.id.pauseButton)
        val stopButton: Button = findViewById(R.id.stopButton)

        playButton.setOnClickListener {
            mediaPlayer.start()
        }

        pauseButton.setOnClickListener {
            mediaPlayer.pause()
        }

        stopButton.setOnClickListener {
            mediaPlayer.stop()
            mediaPlayer.prepare()
        }
    }

    private fun getResourceIdForMusic(selectedMusic: Int): Int {
        return when (selectedMusic) {
            1 -> R.raw.music1
            2 -> R.raw.music2
            else -> R.raw.music1 // Default to music1
        }
    }
}



<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    tools:ignore="HardcodedText">

    <TextView
        android:id="@+id/headingText"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="32dp"
        android:text="MEDIA PLAYER"
        android:textSize="28sp"
        android:textStyle="bold" />

    <ImageView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/headingText"
        android:layout_centerHorizontal="true"
        android:src="@drawable/img" />

    <Button
        android:id="@+id/getStartedButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/ImageViewId"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="16dp"
        android:text="GET STARTED"
        android:textColor="@android:color/black"
        android:textStyle="bold"
        android:backgroundTint="@color/white" />

</RelativeLayout>



<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <!-- Music Item 1 -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center_vertical">

        <TextView
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Music 1" />

        <Button
            android:id="@+id/playButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="PLAY"
            android:textColor="@android:color/black"
            android:textStyle="bold"
            android:backgroundTint="@color/white" />
    </LinearLayout>

    <!-- Music Item 2 -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center_vertical">

        <TextView
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Music 2" />

        <Button
            android:id="@+id/playButton" <!-- Adjust the IDs for play, pause, and stop buttons as needed -->
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="PLAY"
            android:textColor="@android:color/black"
            android:textStyle="bold"
            android:backgroundTint="@color/white" />
    </LinearLayout>

    <!-- Add similar layouts for Music 2 with corresponding buttons -->

    <Button
        android:id="@+id/pauseButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="PAUSE"
        android:textColor="@android:color/black"
        android:textStyle="bold"
        android:backgroundTint="@color/white" />

    <Button
        android:id="@+id/stopButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="STOP"
        android:textColor="@android:color/black"
        android:textStyle="bold"
        android:backgroundTint="@color/white" />

</LinearLayout>




bajjsjsjs




<!-- Music Item 1 -->
<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="horizontal"
    android:gravity="center_vertical">

    <TextView
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1"
        android:text="Music 1" />

    <Button
        android:id="@+id/playButton1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="PLAY"
        android:textColor="@android:color/black"
        android:textStyle="bold"
        android:backgroundTint="@color/white" />
</LinearLayout>

<!-- Music Item 2 -->
<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="horizontal"
    android:gravity="center_vertical">

    <TextView
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1"
        android:text="Music 2" />

    <Button
        android:id="@+id/playButton2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="PLAY"
        android:textColor="@android:color/black"
        android:textStyle="bold"
        android:backgroundTint="@color/white" />
</LinearLayout>





class PlaylistActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_playlist)

        val mediaPlayer1: MediaPlayer = MediaPlayer.create(applicationContext, R.raw.music1)
        val mediaPlayer2: MediaPlayer = MediaPlayer.create(applicationContext, R.raw.music2)

        val playButton1: Button = findViewById(R.id.playButton1)
        val playButton2: Button = findViewById(R.id.playButton2)
        val pauseButton: Button = findViewById(R.id.pauseButton)
        val stopButton: Button = findViewById(R.id.stopButton)

        playButton1.setOnClickListener {
            mediaPlayer1.start()
        }

        playButton2.setOnClickListener {
            mediaPlayer2.start()
        }

        pauseButton.setOnClickListener {
            mediaPlayer1.pause()
            mediaPlayer2.pause()
        }

        stopButton.setOnClickListener {
            mediaPlayer1.stop()
            mediaPlayer1.prepare()
            mediaPlayer2.stop()
            mediaPlayer2.prepare()
        }
    }
}
